PROCEDURE "sap.fsdm.procedures::EuropeanRegulatoryReportingForContractLoad" (IN ROW "sap.fsdm.tabletypes::EuropeanRegulatoryReportingForContractTT")
  LANGUAGE SQLSCRIPT
  SQL SECURITY DEFINER
  AS
BEGIN

    --Check for period overlap
    declare period_overlap condition for sql_error_code 10001;
    declare exit handler for period_overlap
        begin
            declare err_msg clob;
            select TOP 1
                'Business Period Overlap: Key ' ||
                '_Collection.CollectionID=' || TO_VARCHAR("_Collection.CollectionID") || ' ' ||
                '_Collection.IDSystem=' || TO_VARCHAR("_Collection.IDSystem") || ' ' ||
                '_FinancialContract.FinancialContractID=' || TO_VARCHAR("_FinancialContract.FinancialContractID") || ' ' ||
                '_FinancialContract.IDSystem=' || TO_VARCHAR("_FinancialContract.IDSystem") || ' ' ||
                '_FinancialInstrument.FinancialInstrumentID=' || TO_VARCHAR("_FinancialInstrument.FinancialInstrumentID") || ' ' ||
                '_SecuritiesAccount.FinancialContractID=' || TO_VARCHAR("_SecuritiesAccount.FinancialContractID") || ' ' ||
                '_SecuritiesAccount.IDSystem=' || TO_VARCHAR("_SecuritiesAccount.IDSystem") || ' ' ||
                ':Business Period Overlap Error'
            into err_msg
            from
            (
                select
                    "IN"."BusinessValidFrom" as "X",
                    "IN"."BusinessValidTo" as "Y",
                    lag ( "IN"."BusinessValidFrom", 1)
                    over ( partition by
                        "IN"."_Collection.CollectionID",
                        "IN"."_Collection.IDSystem",
                        "IN"."_FinancialContract.FinancialContractID",
                        "IN"."_FinancialContract.IDSystem",
                        "IN"."_FinancialInstrument.FinancialInstrumentID",
                        "IN"."_SecuritiesAccount.FinancialContractID",
                        "IN"."_SecuritiesAccount.IDSystem"
                    order by "IN"."BusinessValidFrom") as "NX_",
                    lag("IN"."BusinessValidTo", 1)
                    over ( partition by
                        "IN"."_Collection.CollectionID",
                        "IN"."_Collection.IDSystem",
                        "IN"."_FinancialContract.FinancialContractID",
                        "IN"."_FinancialContract.IDSystem",
                        "IN"."_FinancialInstrument.FinancialInstrumentID",
                        "IN"."_SecuritiesAccount.FinancialContractID",
                        "IN"."_SecuritiesAccount.IDSystem"
                    order by "IN"."BusinessValidFrom") as "NY_",
                        "_Collection.CollectionID",
                        "_Collection.IDSystem",
                        "_FinancialContract.FinancialContractID",
                        "_FinancialContract.IDSystem",
                        "_FinancialInstrument.FinancialInstrumentID",
                        "_SecuritiesAccount.FinancialContractID",
                        "_SecuritiesAccount.IDSystem"
                from :row as "IN"
            )
            where ("X" >= "NX_" and "X" < "NY_") or ("Y" > "NX_" and "Y" <= "NY_");
            resignal set message_text = :err_msg;
        end;

    var_overlap = select *
                    from
                    (
                        select
                            "IN"."BusinessValidFrom" as "X",
                            "IN"."BusinessValidTo" as "Y",
                            lag ( "IN"."BusinessValidFrom", 1)
                            over ( partition by
                                    "IN"."_Collection.CollectionID",
                                    "IN"."_Collection.IDSystem",
                                    "IN"."_FinancialContract.FinancialContractID",
                                    "IN"."_FinancialContract.IDSystem",
                                    "IN"."_FinancialInstrument.FinancialInstrumentID",
                                    "IN"."_SecuritiesAccount.FinancialContractID",
                                    "IN"."_SecuritiesAccount.IDSystem"
                            order by "IN"."BusinessValidFrom") as "NX_",
                            lag ( "IN"."BusinessValidTo", 1)
                            over ( partition by
                                    "IN"."_Collection.CollectionID",
                                    "IN"."_Collection.IDSystem",
                                    "IN"."_FinancialContract.FinancialContractID",
                                    "IN"."_FinancialContract.IDSystem",
                                    "IN"."_FinancialInstrument.FinancialInstrumentID",
                                    "IN"."_SecuritiesAccount.FinancialContractID",
                                    "IN"."_SecuritiesAccount.IDSystem"
                            order by "IN"."BusinessValidFrom") as "NY_"
                from :row as "IN"
                )
                where ("X" >= "NX_" and "X" < "NY_") or ("Y" > "NX_" and "Y" <= "NY_");

    if not is_empty(:var_overlap) then
      signal period_overlap;
    end if;

    :var_overlap.delete();

    --Insert chunked versions of object
    insert into "sap.fsdm::EuropeanRegulatoryReportingForContract" (
        "_Collection.CollectionID",
        "_Collection.IDSystem",
        "_FinancialContract.FinancialContractID",
        "_FinancialContract.IDSystem",
        "_FinancialInstrument.FinancialInstrumentID",
        "_SecuritiesAccount.FinancialContractID",
        "_SecuritiesAccount.IDSystem",
        "BusinessValidFrom",
        "BusinessValidTo",
        "CoveredBondsCollateralizedByEligibleAssets",
        "CoveredBondsPortfolioInformationAvailable",
        "CoversLiquidityRiskInCountryOfIssuer",
        "FulfillsCollateralRequirementsCRR",
        "LiquidityClassificationOfAsset",
        "LocalFunding",
        "MarketabilityRequirementsHighLiquidAsset",
        "OperationalRequirementsEligibleLiabilitiesMREL",
        "OwnCapitalDesignation",
        "TradingInventory",
        "SourceSystemID",
        "ChangeTimestampInSourceSystem",
        "ChangingUserInSourceSystem",
        "ChangingProcessType",
        "ChangingProcessID"
    )
    (
        select
            "OLD__Collection.CollectionID" as "_Collection.CollectionID" ,
            "OLD__Collection.IDSystem" as "_Collection.IDSystem" ,
            "OLD__FinancialContract.FinancialContractID" as "_FinancialContract.FinancialContractID" ,
            "OLD__FinancialContract.IDSystem" as "_FinancialContract.IDSystem" ,
            "OLD__FinancialInstrument.FinancialInstrumentID" as "_FinancialInstrument.FinancialInstrumentID" ,
            "OLD__SecuritiesAccount.FinancialContractID" as "_SecuritiesAccount.FinancialContractID" ,
            "OLD__SecuritiesAccount.IDSystem" as "_SecuritiesAccount.IDSystem" ,
            "NX_" as "BusinessValidFrom" ,
            "BusinessValidFrom" as "BusinessValidTo" ,
            "OLD_CoveredBondsCollateralizedByEligibleAssets" as "CoveredBondsCollateralizedByEligibleAssets" ,
            "OLD_CoveredBondsPortfolioInformationAvailable" as "CoveredBondsPortfolioInformationAvailable" ,
            "OLD_CoversLiquidityRiskInCountryOfIssuer" as "CoversLiquidityRiskInCountryOfIssuer" ,
            "OLD_FulfillsCollateralRequirementsCRR" as "FulfillsCollateralRequirementsCRR" ,
            "OLD_LiquidityClassificationOfAsset" as "LiquidityClassificationOfAsset" ,
            "OLD_LocalFunding" as "LocalFunding" ,
            "OLD_MarketabilityRequirementsHighLiquidAsset" as "MarketabilityRequirementsHighLiquidAsset" ,
            "OLD_OperationalRequirementsEligibleLiabilitiesMREL" as "OperationalRequirementsEligibleLiabilitiesMREL" ,
            "OLD_OwnCapitalDesignation" as "OwnCapitalDesignation" ,
            "OLD_TradingInventory" as "TradingInventory" ,
            "OLD_SourceSystemID" as "SourceSystemID" ,
            "OLD_ChangeTimestampInSourceSystem" as "ChangeTimestampInSourceSystem" ,
            "OLD_ChangingUserInSourceSystem" as "ChangingUserInSourceSystem" ,
            "OLD_ChangingProcessType" as "ChangingProcessType" ,
            "OLD_ChangingProcessID" as "ChangingProcessID" 
        from
        (
            select
                lag("IN"."BusinessValidTo", 1, "OLD"."BusinessValidFrom")
                over ( partition by
                        "IN"."_Collection.CollectionID",
                        "IN"."_Collection.IDSystem",
                        "IN"."_FinancialContract.FinancialContractID",
                        "IN"."_FinancialContract.IDSystem",
                        "IN"."_FinancialInstrument.FinancialInstrumentID",
                        "IN"."_SecuritiesAccount.FinancialContractID",
                        "IN"."_SecuritiesAccount.IDSystem",
                        "OLD"."BusinessValidFrom"
                       order by "IN"."BusinessValidFrom") as "NX_",
                "IN"."BusinessValidFrom",
                                "OLD"."_Collection.CollectionID" as "OLD__Collection.CollectionID",
                                "OLD"."_Collection.IDSystem" as "OLD__Collection.IDSystem",
                                "OLD"."_FinancialContract.FinancialContractID" as "OLD__FinancialContract.FinancialContractID",
                                "OLD"."_FinancialContract.IDSystem" as "OLD__FinancialContract.IDSystem",
                                "OLD"."_FinancialInstrument.FinancialInstrumentID" as "OLD__FinancialInstrument.FinancialInstrumentID",
                                "OLD"."_SecuritiesAccount.FinancialContractID" as "OLD__SecuritiesAccount.FinancialContractID",
                                "OLD"."_SecuritiesAccount.IDSystem" as "OLD__SecuritiesAccount.IDSystem",
                                "OLD"."BusinessValidFrom" as "OLD_BusinessValidFrom",
                                "OLD"."BusinessValidTo" as "OLD_BusinessValidTo",
                "OLD"."SystemValidFrom" as "OLD_SystemValidFrom",
                "OLD"."SystemValidTo" as "OLD_SystemValidTo",
                                "OLD"."CoveredBondsCollateralizedByEligibleAssets" as "OLD_CoveredBondsCollateralizedByEligibleAssets",
                                "OLD"."CoveredBondsPortfolioInformationAvailable" as "OLD_CoveredBondsPortfolioInformationAvailable",
                                "OLD"."CoversLiquidityRiskInCountryOfIssuer" as "OLD_CoversLiquidityRiskInCountryOfIssuer",
                                "OLD"."FulfillsCollateralRequirementsCRR" as "OLD_FulfillsCollateralRequirementsCRR",
                                "OLD"."LiquidityClassificationOfAsset" as "OLD_LiquidityClassificationOfAsset",
                                "OLD"."LocalFunding" as "OLD_LocalFunding",
                                "OLD"."MarketabilityRequirementsHighLiquidAsset" as "OLD_MarketabilityRequirementsHighLiquidAsset",
                                "OLD"."OperationalRequirementsEligibleLiabilitiesMREL" as "OLD_OperationalRequirementsEligibleLiabilitiesMREL",
                                "OLD"."OwnCapitalDesignation" as "OLD_OwnCapitalDesignation",
                                "OLD"."TradingInventory" as "OLD_TradingInventory",
                                "OLD"."SourceSystemID" as "OLD_SourceSystemID",
                                "OLD"."ChangeTimestampInSourceSystem" as "OLD_ChangeTimestampInSourceSystem",
                                "OLD"."ChangingUserInSourceSystem" as "OLD_ChangingUserInSourceSystem",
                                "OLD"."ChangingProcessType" as "OLD_ChangingProcessType",
                                "OLD"."ChangingProcessID" as "OLD_ChangingProcessID"
            from :row as "IN"
            inner join "sap.fsdm::EuropeanRegulatoryReportingForContract" as "OLD"
            on
                ( case when "IN"."_Collection.CollectionID" is null then '' else "IN"."_Collection.CollectionID" end ) = "OLD"."_Collection.CollectionID" and
                ( case when "IN"."_Collection.IDSystem" is null then '' else "IN"."_Collection.IDSystem" end ) = "OLD"."_Collection.IDSystem" and
                ( case when "IN"."_FinancialContract.FinancialContractID" is null then '' else "IN"."_FinancialContract.FinancialContractID" end ) = "OLD"."_FinancialContract.FinancialContractID" and
                ( case when "IN"."_FinancialContract.IDSystem" is null then '' else "IN"."_FinancialContract.IDSystem" end ) = "OLD"."_FinancialContract.IDSystem" and
                ( case when "IN"."_FinancialInstrument.FinancialInstrumentID" is null then '' else "IN"."_FinancialInstrument.FinancialInstrumentID" end ) = "OLD"."_FinancialInstrument.FinancialInstrumentID" and
                ( case when "IN"."_SecuritiesAccount.FinancialContractID" is null then '' else "IN"."_SecuritiesAccount.FinancialContractID" end ) = "OLD"."_SecuritiesAccount.FinancialContractID" and
                ( case when "IN"."_SecuritiesAccount.IDSystem" is null then '' else "IN"."_SecuritiesAccount.IDSystem" end ) = "OLD"."_SecuritiesAccount.IDSystem" 
            where
                         ( "IN"."BusinessValidFrom" < "OLD"."BusinessValidTo" and "IN"."BusinessValidTo" > "OLD"."BusinessValidFrom" ) or
                         ( "IN"."BusinessValidFrom" = "OLD"."BusinessValidFrom" and "IN"."BusinessValidTo" = "OLD"."BusinessValidTo" ))
        where "BusinessValidFrom" > "NX_" );

    --Insert rightmost chunk
    insert into "sap.fsdm::EuropeanRegulatoryReportingForContract" (
        "_Collection.CollectionID",
        "_Collection.IDSystem",
        "_FinancialContract.FinancialContractID",
        "_FinancialContract.IDSystem",
        "_FinancialInstrument.FinancialInstrumentID",
        "_SecuritiesAccount.FinancialContractID",
        "_SecuritiesAccount.IDSystem",
        "BusinessValidFrom",
        "BusinessValidTo",
        "CoveredBondsCollateralizedByEligibleAssets",
        "CoveredBondsPortfolioInformationAvailable",
        "CoversLiquidityRiskInCountryOfIssuer",
        "FulfillsCollateralRequirementsCRR",
        "LiquidityClassificationOfAsset",
        "LocalFunding",
        "MarketabilityRequirementsHighLiquidAsset",
        "OperationalRequirementsEligibleLiabilitiesMREL",
        "OwnCapitalDesignation",
        "TradingInventory",
        "SourceSystemID",
        "ChangeTimestampInSourceSystem",
        "ChangingUserInSourceSystem",
        "ChangingProcessType",
        "ChangingProcessID"
    )
    (
        select
            "OLD__Collection.CollectionID" as "_Collection.CollectionID",
            "OLD__Collection.IDSystem" as "_Collection.IDSystem",
            "OLD__FinancialContract.FinancialContractID" as "_FinancialContract.FinancialContractID",
            "OLD__FinancialContract.IDSystem" as "_FinancialContract.IDSystem",
            "OLD__FinancialInstrument.FinancialInstrumentID" as "_FinancialInstrument.FinancialInstrumentID",
            "OLD__SecuritiesAccount.FinancialContractID" as "_SecuritiesAccount.FinancialContractID",
            "OLD__SecuritiesAccount.IDSystem" as "_SecuritiesAccount.IDSystem",
            "BusinessValidTo" as "BusinessValidFrom",
            "OLD_BusinessValidTo" as "BusinessValidTo",
            "OLD_CoveredBondsCollateralizedByEligibleAssets" as "CoveredBondsCollateralizedByEligibleAssets",
            "OLD_CoveredBondsPortfolioInformationAvailable" as "CoveredBondsPortfolioInformationAvailable",
            "OLD_CoversLiquidityRiskInCountryOfIssuer" as "CoversLiquidityRiskInCountryOfIssuer",
            "OLD_FulfillsCollateralRequirementsCRR" as "FulfillsCollateralRequirementsCRR",
            "OLD_LiquidityClassificationOfAsset" as "LiquidityClassificationOfAsset",
            "OLD_LocalFunding" as "LocalFunding",
            "OLD_MarketabilityRequirementsHighLiquidAsset" as "MarketabilityRequirementsHighLiquidAsset",
            "OLD_OperationalRequirementsEligibleLiabilitiesMREL" as "OperationalRequirementsEligibleLiabilitiesMREL",
            "OLD_OwnCapitalDesignation" as "OwnCapitalDesignation",
            "OLD_TradingInventory" as "TradingInventory",
            "OLD_SourceSystemID" as "SourceSystemID",
            "OLD_ChangeTimestampInSourceSystem" as "ChangeTimestampInSourceSystem",
            "OLD_ChangingUserInSourceSystem" as "ChangingUserInSourceSystem",
            "OLD_ChangingProcessType" as "ChangingProcessType",
            "OLD_ChangingProcessID" as "ChangingProcessID"
        from
        (
            select
                lead("IN"."BusinessValidFrom", 1, "OLD"."BusinessValidTo")
                over ( partition by
                        "IN"."_Collection.CollectionID",
                        "IN"."_Collection.IDSystem",
                        "IN"."_FinancialContract.FinancialContractID",
                        "IN"."_FinancialContract.IDSystem",
                        "IN"."_FinancialInstrument.FinancialInstrumentID",
                        "IN"."_SecuritiesAccount.FinancialContractID",
                        "IN"."_SecuritiesAccount.IDSystem",
                        "OLD"."BusinessValidFrom"
                order by "IN"."BusinessValidFrom") AS "NY_",
                "IN"."BusinessValidTo",
                        "OLD"."_Collection.CollectionID" as "OLD__Collection.CollectionID",
                        "OLD"."_Collection.IDSystem" as "OLD__Collection.IDSystem",
                        "OLD"."_FinancialContract.FinancialContractID" as "OLD__FinancialContract.FinancialContractID",
                        "OLD"."_FinancialContract.IDSystem" as "OLD__FinancialContract.IDSystem",
                        "OLD"."_FinancialInstrument.FinancialInstrumentID" as "OLD__FinancialInstrument.FinancialInstrumentID",
                        "OLD"."_SecuritiesAccount.FinancialContractID" as "OLD__SecuritiesAccount.FinancialContractID",
                        "OLD"."_SecuritiesAccount.IDSystem" as "OLD__SecuritiesAccount.IDSystem",
                        "OLD"."BusinessValidFrom" as "OLD_BusinessValidFrom",
                        "OLD"."BusinessValidTo" as "OLD_BusinessValidTo",
            "OLD"."SystemValidFrom" as "OLD_SystemValidFrom",
            "OLD"."SystemValidTo" as "OLD_SystemValidTo",
                        "OLD"."CoveredBondsCollateralizedByEligibleAssets" as "OLD_CoveredBondsCollateralizedByEligibleAssets",
                        "OLD"."CoveredBondsPortfolioInformationAvailable" as "OLD_CoveredBondsPortfolioInformationAvailable",
                        "OLD"."CoversLiquidityRiskInCountryOfIssuer" as "OLD_CoversLiquidityRiskInCountryOfIssuer",
                        "OLD"."FulfillsCollateralRequirementsCRR" as "OLD_FulfillsCollateralRequirementsCRR",
                        "OLD"."LiquidityClassificationOfAsset" as "OLD_LiquidityClassificationOfAsset",
                        "OLD"."LocalFunding" as "OLD_LocalFunding",
                        "OLD"."MarketabilityRequirementsHighLiquidAsset" as "OLD_MarketabilityRequirementsHighLiquidAsset",
                        "OLD"."OperationalRequirementsEligibleLiabilitiesMREL" as "OLD_OperationalRequirementsEligibleLiabilitiesMREL",
                        "OLD"."OwnCapitalDesignation" as "OLD_OwnCapitalDesignation",
                        "OLD"."TradingInventory" as "OLD_TradingInventory",
                        "OLD"."SourceSystemID" as "OLD_SourceSystemID",
                        "OLD"."ChangeTimestampInSourceSystem" as "OLD_ChangeTimestampInSourceSystem",
                        "OLD"."ChangingUserInSourceSystem" as "OLD_ChangingUserInSourceSystem",
                        "OLD"."ChangingProcessType" as "OLD_ChangingProcessType",
                        "OLD"."ChangingProcessID" as "OLD_ChangingProcessID"
            from :row as "IN"
            inner join "sap.fsdm::EuropeanRegulatoryReportingForContract" as "OLD"
            on
                ( case when "IN"."_Collection.CollectionID" is null then '' else "IN"."_Collection.CollectionID" end ) = "OLD"."_Collection.CollectionID" and
                ( case when "IN"."_Collection.IDSystem" is null then '' else "IN"."_Collection.IDSystem" end ) = "OLD"."_Collection.IDSystem" and
                ( case when "IN"."_FinancialContract.FinancialContractID" is null then '' else "IN"."_FinancialContract.FinancialContractID" end ) = "OLD"."_FinancialContract.FinancialContractID" and
                ( case when "IN"."_FinancialContract.IDSystem" is null then '' else "IN"."_FinancialContract.IDSystem" end ) = "OLD"."_FinancialContract.IDSystem" and
                ( case when "IN"."_FinancialInstrument.FinancialInstrumentID" is null then '' else "IN"."_FinancialInstrument.FinancialInstrumentID" end ) = "OLD"."_FinancialInstrument.FinancialInstrumentID" and
                ( case when "IN"."_SecuritiesAccount.FinancialContractID" is null then '' else "IN"."_SecuritiesAccount.FinancialContractID" end ) = "OLD"."_SecuritiesAccount.FinancialContractID" and
                ( case when "IN"."_SecuritiesAccount.IDSystem" is null then '' else "IN"."_SecuritiesAccount.IDSystem" end ) = "OLD"."_SecuritiesAccount.IDSystem" 
            where
                         ( "IN"."BusinessValidFrom" < "OLD"."BusinessValidTo" and "IN"."BusinessValidTo" > "OLD"."BusinessValidFrom" ) or
                         ( "IN"."BusinessValidFrom" = "OLD"."BusinessValidFrom" and "IN"."BusinessValidTo" = "OLD"."BusinessValidTo" ))
        where "NY_" = "OLD_BusinessValidTo" and "OLD_BusinessValidTo" > "BusinessValidTo");

    delete from "sap.fsdm::EuropeanRegulatoryReportingForContract"
    where (
        "_Collection.CollectionID",
        "_Collection.IDSystem",
        "_FinancialContract.FinancialContractID",
        "_FinancialContract.IDSystem",
        "_FinancialInstrument.FinancialInstrumentID",
        "_SecuritiesAccount.FinancialContractID",
        "_SecuritiesAccount.IDSystem",
        "BusinessValidFrom",
        "BusinessValidTo"
    )
    in
    (
        select
            "OLD"."_Collection.CollectionID",
            "OLD"."_Collection.IDSystem",
            "OLD"."_FinancialContract.FinancialContractID",
            "OLD"."_FinancialContract.IDSystem",
            "OLD"."_FinancialInstrument.FinancialInstrumentID",
            "OLD"."_SecuritiesAccount.FinancialContractID",
            "OLD"."_SecuritiesAccount.IDSystem",
            "OLD"."BusinessValidFrom",
            "OLD"."BusinessValidTo"
        from :row as "IN"
        inner join "sap.fsdm::EuropeanRegulatoryReportingForContract" as "OLD"
        on
           ( case when "IN"."_Collection.CollectionID" is null then '' else "IN"."_Collection.CollectionID" end ) = "OLD"."_Collection.CollectionID" and
           ( case when "IN"."_Collection.IDSystem" is null then '' else "IN"."_Collection.IDSystem" end ) = "OLD"."_Collection.IDSystem" and
           ( case when "IN"."_FinancialContract.FinancialContractID" is null then '' else "IN"."_FinancialContract.FinancialContractID" end ) = "OLD"."_FinancialContract.FinancialContractID" and
           ( case when "IN"."_FinancialContract.IDSystem" is null then '' else "IN"."_FinancialContract.IDSystem" end ) = "OLD"."_FinancialContract.IDSystem" and
           ( case when "IN"."_FinancialInstrument.FinancialInstrumentID" is null then '' else "IN"."_FinancialInstrument.FinancialInstrumentID" end ) = "OLD"."_FinancialInstrument.FinancialInstrumentID" and
           ( case when "IN"."_SecuritiesAccount.FinancialContractID" is null then '' else "IN"."_SecuritiesAccount.FinancialContractID" end ) = "OLD"."_SecuritiesAccount.FinancialContractID" and
           ( case when "IN"."_SecuritiesAccount.IDSystem" is null then '' else "IN"."_SecuritiesAccount.IDSystem" end ) = "OLD"."_SecuritiesAccount.IDSystem" 
        where
           ( "IN"."BusinessValidFrom" < "OLD"."BusinessValidTo" and "IN"."BusinessValidTo" > "OLD"."BusinessValidFrom" ) or
           ( "IN"."BusinessValidFrom" = "OLD"."BusinessValidFrom" and "IN"."BusinessValidTo" = "OLD"."BusinessValidTo" ));

    --Insert ALL the input data 
    insert into "sap.fsdm::EuropeanRegulatoryReportingForContract" (
        "_Collection.CollectionID",
        "_Collection.IDSystem",
        "_FinancialContract.FinancialContractID",
        "_FinancialContract.IDSystem",
        "_FinancialInstrument.FinancialInstrumentID",
        "_SecuritiesAccount.FinancialContractID",
        "_SecuritiesAccount.IDSystem",
        "BusinessValidFrom",
        "BusinessValidTo",
        "CoveredBondsCollateralizedByEligibleAssets",
        "CoveredBondsPortfolioInformationAvailable",
        "CoversLiquidityRiskInCountryOfIssuer",
        "FulfillsCollateralRequirementsCRR",
        "LiquidityClassificationOfAsset",
        "LocalFunding",
        "MarketabilityRequirementsHighLiquidAsset",
        "OperationalRequirementsEligibleLiabilitiesMREL",
        "OwnCapitalDesignation",
        "TradingInventory",
        "SourceSystemID",
        "ChangeTimestampInSourceSystem",
        "ChangingUserInSourceSystem",
        "ChangingProcessType",
        "ChangingProcessID"
)    (
        select
            ( case when "_Collection.CollectionID" is null then '' else "_Collection.CollectionID" end ) as "_Collection.CollectionID",
            ( case when "_Collection.IDSystem" is null then '' else "_Collection.IDSystem" end ) as "_Collection.IDSystem",
            ( case when "_FinancialContract.FinancialContractID" is null then '' else "_FinancialContract.FinancialContractID" end ) as "_FinancialContract.FinancialContractID",
            ( case when "_FinancialContract.IDSystem" is null then '' else "_FinancialContract.IDSystem" end ) as "_FinancialContract.IDSystem",
            ( case when "_FinancialInstrument.FinancialInstrumentID" is null then '' else "_FinancialInstrument.FinancialInstrumentID" end ) as "_FinancialInstrument.FinancialInstrumentID",
            ( case when "_SecuritiesAccount.FinancialContractID" is null then '' else "_SecuritiesAccount.FinancialContractID" end ) as "_SecuritiesAccount.FinancialContractID",
            ( case when "_SecuritiesAccount.IDSystem" is null then '' else "_SecuritiesAccount.IDSystem" end ) as "_SecuritiesAccount.IDSystem",
            "BusinessValidFrom"  ,
            "BusinessValidTo"  ,
            "CoveredBondsCollateralizedByEligibleAssets"  ,
            "CoveredBondsPortfolioInformationAvailable"  ,
            "CoversLiquidityRiskInCountryOfIssuer"  ,
            "FulfillsCollateralRequirementsCRR"  ,
            "LiquidityClassificationOfAsset"  ,
            "LocalFunding"  ,
            "MarketabilityRequirementsHighLiquidAsset"  ,
            "OperationalRequirementsEligibleLiabilitiesMREL"  ,
            "OwnCapitalDesignation"  ,
            "TradingInventory"  ,
            "SourceSystemID"  ,
            "ChangeTimestampInSourceSystem"  ,
            "ChangingUserInSourceSystem"  ,
            "ChangingProcessType"  ,
            "ChangingProcessID"  
        from :row );

END