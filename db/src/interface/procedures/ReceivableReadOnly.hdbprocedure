PROCEDURE "sap.fsdm.procedures::ReceivableReadOnly" (IN ROW "sap.fsdm.tabletypes::ReceivableTT", OUT CURR_DEL "sap.fsdm.tabletypes::ReceivableTT_Del", OUT CURR_INS "sap.fsdm.tabletypes::ReceivableTT_Out")
  LANGUAGE SQLSCRIPT
  SQL SECURITY DEFINER
  READS SQL DATA
  AS
BEGIN

    --Check for period overlap
    declare period_overlap condition for sql_error_code 10001;
    declare exit handler for period_overlap
        begin
            declare err_msg clob;
            select TOP 1
                'Business Period Overlap: Key ' ||
                'ReceivableID=' || TO_VARCHAR("ReceivableID") || ' ' ||
                ':Business Period Overlap Error'
            into err_msg
            from
            (
                select
                    "IN"."BusinessValidFrom" as "X",
                    "IN"."BusinessValidTo" as "Y",
                    lag ( "IN"."BusinessValidFrom", 1)
                    over ( partition by
                        "IN"."ReceivableID"
                    order by "IN"."BusinessValidFrom") as "NX_",
                    lag("IN"."BusinessValidTo", 1)
                    over ( partition by
                        "IN"."ReceivableID"
                    order by "IN"."BusinessValidFrom") as "NY_",
                        "ReceivableID"
                from :row as "IN"
            )
            where ("X" >= "NX_" and "X" < "NY_") or ("Y" > "NX_" and "Y" <= "NY_");
            resignal set message_text = :err_msg;
        end;

    var_overlap = select *
                    from
                    (
                        select
                            "IN"."BusinessValidFrom" as "X",
                            "IN"."BusinessValidTo" as "Y",
                            lag ( "IN"."BusinessValidFrom", 1)
                            over ( partition by
                                    "IN"."ReceivableID"
                            order by "IN"."BusinessValidFrom") as "NX_",
                            lag ( "IN"."BusinessValidTo", 1)
                            over ( partition by
                                    "IN"."ReceivableID"
                            order by "IN"."BusinessValidFrom") as "NY_"
                from :row as "IN"
                )
                where ("X" >= "NX_" and "X" < "NY_") or ("Y" > "NX_" and "Y" <= "NY_");

    if not is_empty(:var_overlap) then
      signal period_overlap;
    end if;

    :var_overlap.delete();


     CURR_DEL = select 
        "ReceivableID",
        "BusinessValidFrom",
        "BusinessValidTo"
        from "sap.fsdm::Receivable" WHERE
        (            "ReceivableID" ,
            "BusinessValidFrom" ,
            "BusinessValidTo" 

        )        
in ( select
            "OLD"."ReceivableID",
            "OLD"."BusinessValidFrom",
            "OLD"."BusinessValidTo"
            from :row as "IN"
            inner join "sap.fsdm::Receivable" as "OLD"
            on
               ( case when "IN"."ReceivableID" is null then '' else "IN"."ReceivableID" end ) = "OLD"."ReceivableID" 
            where
               ( "IN"."BusinessValidFrom" < "OLD"."BusinessValidTo" and "IN"."BusinessValidTo" > "OLD"."BusinessValidFrom" ) or
               ( "IN"."BusinessValidFrom" = "OLD"."BusinessValidFrom" and "IN"."BusinessValidTo" = "OLD"."BusinessValidTo" ));


--Insert ALL the input data 

    CURR_INS = select 
        "ReceivableID",
        "BusinessValidFrom",
        "BusinessValidTo",
        "ASSOC_GuaranteeProvidingEntitlement.FinancialContractID",
        "ASSOC_GuaranteeProvidingEntitlement.IDSystem",
        "ASSOC_OrganizationUnit.OrganizationalUnitID",
        "ASSOC_OrganizationUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID",
        "ApplicableLaw",
        "LastDueDate",
        "OriginalReceivableAmount",
        "OriginalReceivableAmountCurrency",
        "OutstandingReceivableAmount",
        "OutstandingReceivableAmountCurrency",
        "PlaceOfJurisdiction",
        "ReceivableType",
        "SourceSystemID",
        "ChangeTimestampInSourceSystem",
        "ChangingUserInSourceSystem",
        "ChangingProcessType",
        "ChangingProcessID"
        from (
            (
                select
                    ( case when "ReceivableID" is null then '' else "ReceivableID" end ) as "ReceivableID",
                    "BusinessValidFrom"  ,
                    "BusinessValidTo"  ,
                    "ASSOC_GuaranteeProvidingEntitlement.FinancialContractID"  ,
                    "ASSOC_GuaranteeProvidingEntitlement.IDSystem"  ,
                    "ASSOC_OrganizationUnit.OrganizationalUnitID"  ,
                    "ASSOC_OrganizationUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID"  ,
                    "ApplicableLaw"  ,
                    "LastDueDate"  ,
                    "OriginalReceivableAmount"  ,
                    "OriginalReceivableAmountCurrency"  ,
                    "OutstandingReceivableAmount"  ,
                    "OutstandingReceivableAmountCurrency"  ,
                    "PlaceOfJurisdiction"  ,
                    "ReceivableType"  ,
                    "SourceSystemID"  ,
                    "ChangeTimestampInSourceSystem"  ,
                    "ChangingUserInSourceSystem"  ,
                    "ChangingProcessType"  ,
                    "ChangingProcessID"  
                from :row             )
            UNION ALL
            (
                select
                    "OLD_ReceivableID" as "ReceivableID" ,
                    "NX_" as "BusinessValidFrom" ,
                    "BusinessValidFrom" as "BusinessValidTo" ,
                    "OLD_ASSOC_GuaranteeProvidingEntitlement.FinancialContractID" as "ASSOC_GuaranteeProvidingEntitlement.FinancialContractID" ,
                    "OLD_ASSOC_GuaranteeProvidingEntitlement.IDSystem" as "ASSOC_GuaranteeProvidingEntitlement.IDSystem" ,
                    "OLD_ASSOC_OrganizationUnit.OrganizationalUnitID" as "ASSOC_OrganizationUnit.OrganizationalUnitID" ,
                    "OLD_ASSOC_OrganizationUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID" as "ASSOC_OrganizationUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID" ,
                    "OLD_ApplicableLaw" as "ApplicableLaw" ,
                    "OLD_LastDueDate" as "LastDueDate" ,
                    "OLD_OriginalReceivableAmount" as "OriginalReceivableAmount" ,
                    "OLD_OriginalReceivableAmountCurrency" as "OriginalReceivableAmountCurrency" ,
                    "OLD_OutstandingReceivableAmount" as "OutstandingReceivableAmount" ,
                    "OLD_OutstandingReceivableAmountCurrency" as "OutstandingReceivableAmountCurrency" ,
                    "OLD_PlaceOfJurisdiction" as "PlaceOfJurisdiction" ,
                    "OLD_ReceivableType" as "ReceivableType" ,
                    "OLD_SourceSystemID" as "SourceSystemID" ,
                    "OLD_ChangeTimestampInSourceSystem" as "ChangeTimestampInSourceSystem" ,
                    "OLD_ChangingUserInSourceSystem" as "ChangingUserInSourceSystem" ,
                    "OLD_ChangingProcessType" as "ChangingProcessType" ,
                    "OLD_ChangingProcessID" as "ChangingProcessID" 
        from
        (
            select
                lag("IN"."BusinessValidTo", 1, "OLD"."BusinessValidFrom")
                over ( partition by
                        "IN"."ReceivableID",
                        "OLD"."BusinessValidFrom"
                       order by "IN"."BusinessValidFrom") as "NX_",
                "IN"."BusinessValidFrom",
                                "OLD"."ReceivableID" as "OLD_ReceivableID",
                                "OLD"."BusinessValidFrom" as "OLD_BusinessValidFrom",
                                "OLD"."BusinessValidTo" as "OLD_BusinessValidTo",
                "OLD"."SystemValidFrom" as "OLD_SystemValidFrom",
                "OLD"."SystemValidTo" as "OLD_SystemValidTo",
                                "OLD"."ASSOC_GuaranteeProvidingEntitlement.FinancialContractID" as "OLD_ASSOC_GuaranteeProvidingEntitlement.FinancialContractID",
                                "OLD"."ASSOC_GuaranteeProvidingEntitlement.IDSystem" as "OLD_ASSOC_GuaranteeProvidingEntitlement.IDSystem",
                                "OLD"."ASSOC_OrganizationUnit.OrganizationalUnitID" as "OLD_ASSOC_OrganizationUnit.OrganizationalUnitID",
                                "OLD"."ASSOC_OrganizationUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID" as "OLD_ASSOC_OrganizationUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID",
                                "OLD"."ApplicableLaw" as "OLD_ApplicableLaw",
                                "OLD"."LastDueDate" as "OLD_LastDueDate",
                                "OLD"."OriginalReceivableAmount" as "OLD_OriginalReceivableAmount",
                                "OLD"."OriginalReceivableAmountCurrency" as "OLD_OriginalReceivableAmountCurrency",
                                "OLD"."OutstandingReceivableAmount" as "OLD_OutstandingReceivableAmount",
                                "OLD"."OutstandingReceivableAmountCurrency" as "OLD_OutstandingReceivableAmountCurrency",
                                "OLD"."PlaceOfJurisdiction" as "OLD_PlaceOfJurisdiction",
                                "OLD"."ReceivableType" as "OLD_ReceivableType",
                                "OLD"."SourceSystemID" as "OLD_SourceSystemID",
                                "OLD"."ChangeTimestampInSourceSystem" as "OLD_ChangeTimestampInSourceSystem",
                                "OLD"."ChangingUserInSourceSystem" as "OLD_ChangingUserInSourceSystem",
                                "OLD"."ChangingProcessType" as "OLD_ChangingProcessType",
                                "OLD"."ChangingProcessID" as "OLD_ChangingProcessID"
            from :row as "IN"
            inner join "sap.fsdm::Receivable" as "OLD"
            on
                ( case when "IN"."ReceivableID" is null then '' else "IN"."ReceivableID" end ) = "OLD"."ReceivableID" 
            where
                         ( "IN"."BusinessValidFrom" < "OLD"."BusinessValidTo" and "IN"."BusinessValidTo" > "OLD"."BusinessValidFrom" ) or
                         ( "IN"."BusinessValidFrom" = "OLD"."BusinessValidFrom" and "IN"."BusinessValidTo" = "OLD"."BusinessValidTo" ))
        where "BusinessValidFrom" > "NX_" )
            UNION ALL
        (
            select
            "OLD_ReceivableID" as "ReceivableID",
            "BusinessValidTo" as "BusinessValidFrom",
            "OLD_BusinessValidTo" as "BusinessValidTo",
            "OLD_ASSOC_GuaranteeProvidingEntitlement.FinancialContractID" as "ASSOC_GuaranteeProvidingEntitlement.FinancialContractID",
            "OLD_ASSOC_GuaranteeProvidingEntitlement.IDSystem" as "ASSOC_GuaranteeProvidingEntitlement.IDSystem",
            "OLD_ASSOC_OrganizationUnit.OrganizationalUnitID" as "ASSOC_OrganizationUnit.OrganizationalUnitID",
            "OLD_ASSOC_OrganizationUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID" as "ASSOC_OrganizationUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID",
            "OLD_ApplicableLaw" as "ApplicableLaw",
            "OLD_LastDueDate" as "LastDueDate",
            "OLD_OriginalReceivableAmount" as "OriginalReceivableAmount",
            "OLD_OriginalReceivableAmountCurrency" as "OriginalReceivableAmountCurrency",
            "OLD_OutstandingReceivableAmount" as "OutstandingReceivableAmount",
            "OLD_OutstandingReceivableAmountCurrency" as "OutstandingReceivableAmountCurrency",
            "OLD_PlaceOfJurisdiction" as "PlaceOfJurisdiction",
            "OLD_ReceivableType" as "ReceivableType",
            "OLD_SourceSystemID" as "SourceSystemID",
            "OLD_ChangeTimestampInSourceSystem" as "ChangeTimestampInSourceSystem",
            "OLD_ChangingUserInSourceSystem" as "ChangingUserInSourceSystem",
            "OLD_ChangingProcessType" as "ChangingProcessType",
            "OLD_ChangingProcessID" as "ChangingProcessID"
            from
            (
                select
                lead("IN"."BusinessValidFrom", 1, "OLD"."BusinessValidTo")
                over ( partition by
                        "IN"."ReceivableID",
                        "OLD"."BusinessValidFrom"
                order by "IN"."BusinessValidFrom") AS "NY_",
                "IN"."BusinessValidTo",
                        "OLD"."ReceivableID" as "OLD_ReceivableID",
                        "OLD"."BusinessValidFrom" as "OLD_BusinessValidFrom",
                        "OLD"."BusinessValidTo" as "OLD_BusinessValidTo",
            "OLD"."SystemValidFrom" as "OLD_SystemValidFrom",
            "OLD"."SystemValidTo" as "OLD_SystemValidTo",
                        "OLD"."ASSOC_GuaranteeProvidingEntitlement.FinancialContractID" as "OLD_ASSOC_GuaranteeProvidingEntitlement.FinancialContractID",
                        "OLD"."ASSOC_GuaranteeProvidingEntitlement.IDSystem" as "OLD_ASSOC_GuaranteeProvidingEntitlement.IDSystem",
                        "OLD"."ASSOC_OrganizationUnit.OrganizationalUnitID" as "OLD_ASSOC_OrganizationUnit.OrganizationalUnitID",
                        "OLD"."ASSOC_OrganizationUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID" as "OLD_ASSOC_OrganizationUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID",
                        "OLD"."ApplicableLaw" as "OLD_ApplicableLaw",
                        "OLD"."LastDueDate" as "OLD_LastDueDate",
                        "OLD"."OriginalReceivableAmount" as "OLD_OriginalReceivableAmount",
                        "OLD"."OriginalReceivableAmountCurrency" as "OLD_OriginalReceivableAmountCurrency",
                        "OLD"."OutstandingReceivableAmount" as "OLD_OutstandingReceivableAmount",
                        "OLD"."OutstandingReceivableAmountCurrency" as "OLD_OutstandingReceivableAmountCurrency",
                        "OLD"."PlaceOfJurisdiction" as "OLD_PlaceOfJurisdiction",
                        "OLD"."ReceivableType" as "OLD_ReceivableType",
                        "OLD"."SourceSystemID" as "OLD_SourceSystemID",
                        "OLD"."ChangeTimestampInSourceSystem" as "OLD_ChangeTimestampInSourceSystem",
                        "OLD"."ChangingUserInSourceSystem" as "OLD_ChangingUserInSourceSystem",
                        "OLD"."ChangingProcessType" as "OLD_ChangingProcessType",
                        "OLD"."ChangingProcessID" as "OLD_ChangingProcessID"
            from :row as "IN"
            inner join "sap.fsdm::Receivable" as "OLD"
            on
                ( case when "IN"."ReceivableID" is null then '' else "IN"."ReceivableID" end ) = "OLD"."ReceivableID" 
            where
                         ( "IN"."BusinessValidFrom" < "OLD"."BusinessValidTo" and "IN"."BusinessValidTo" > "OLD"."BusinessValidFrom" ) or
                         ( "IN"."BusinessValidFrom" = "OLD"."BusinessValidFrom" and "IN"."BusinessValidTo" = "OLD"."BusinessValidTo" ))
        where "NY_" = "OLD_BusinessValidTo" and "OLD_BusinessValidTo" > "BusinessValidTo"));



END
