PROCEDURE "sap.fsdm.procedures::PhoneNumberDelReadOnly" (IN ROW "sap.fsdm.tabletypes::PhoneNumberTT_Del", OUT CURR_DEL "sap.fsdm.tabletypes::PhoneNumberTT_Del", OUT CURR_INS "sap.fsdm.tabletypes::PhoneNumberTT_Out")
  LANGUAGE SQLSCRIPT
  SQL SECURITY DEFINER
  READS SQL DATA
  AS
BEGIN

    --Check for period overlap
    declare period_overlap condition for sql_error_code 10001;
    declare exit handler for period_overlap
        begin
            declare err_msg clob;
            select TOP 1
                'Business Period Overlap: Key ' ||
                'PhoneNumberType=' || TO_VARCHAR("PhoneNumberType") || ' ' ||
                'SequenceNumber=' || TO_VARCHAR("SequenceNumber") || ' ' ||
                'ASSOC_OrganizationalUnit.OrganizationalUnitID=' || TO_VARCHAR("ASSOC_OrganizationalUnit.OrganizationalUnitID") || ' ' ||
                'ASSOC_OrganizationalUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID=' || TO_VARCHAR("ASSOC_OrganizationalUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID") || ' ' ||
                'ASSOC_Partner.BusinessPartnerID=' || TO_VARCHAR("ASSOC_Partner.BusinessPartnerID") || ' ' ||
                ':Business Period Overlap Error'
            into err_msg
            from
            (
                select
                    "IN"."BusinessValidFrom" as "X",
                    "IN"."BusinessValidTo" as "Y",
                    lag ( "IN"."BusinessValidFrom", 1)
                    over ( partition by
                        "IN"."PhoneNumberType",
                        "IN"."SequenceNumber",
                        "IN"."ASSOC_OrganizationalUnit.OrganizationalUnitID",
                        "IN"."ASSOC_OrganizationalUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID",
                        "IN"."ASSOC_Partner.BusinessPartnerID"
                    order by "IN"."BusinessValidFrom") as "NX_",
                    lag("IN"."BusinessValidTo", 1)
                    over ( partition by
                        "IN"."PhoneNumberType",
                        "IN"."SequenceNumber",
                        "IN"."ASSOC_OrganizationalUnit.OrganizationalUnitID",
                        "IN"."ASSOC_OrganizationalUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID",
                        "IN"."ASSOC_Partner.BusinessPartnerID"
                    order by "IN"."BusinessValidFrom") as "NY_",
                        "PhoneNumberType",
                        "SequenceNumber",
                        "ASSOC_OrganizationalUnit.OrganizationalUnitID",
                        "ASSOC_OrganizationalUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID",
                        "ASSOC_Partner.BusinessPartnerID"
                from :row as "IN"
            )
            where ("X" >= "NX_" and "X" < "NY_") or ("Y" > "NX_" and "Y" <= "NY_");
            resignal set message_text = :err_msg;
        end;

    var_overlap = select *
                    from
                    (
                        select
                            "IN"."BusinessValidFrom" as "X",
                            "IN"."BusinessValidTo" as "Y",
                            lag ( "IN"."BusinessValidFrom", 1)
                            over ( partition by
                                    "IN"."PhoneNumberType",
                                    "IN"."SequenceNumber",
                                    "IN"."ASSOC_OrganizationalUnit.OrganizationalUnitID",
                                    "IN"."ASSOC_OrganizationalUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID",
                                    "IN"."ASSOC_Partner.BusinessPartnerID"
                            order by "IN"."BusinessValidFrom") as "NX_",
                            lag ( "IN"."BusinessValidTo", 1)
                            over ( partition by
                                    "IN"."PhoneNumberType",
                                    "IN"."SequenceNumber",
                                    "IN"."ASSOC_OrganizationalUnit.OrganizationalUnitID",
                                    "IN"."ASSOC_OrganizationalUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID",
                                    "IN"."ASSOC_Partner.BusinessPartnerID"
                            order by "IN"."BusinessValidFrom") as "NY_"
                from :row as "IN"
                )
                where ("X" >= "NX_" and "X" < "NY_") or ("Y" > "NX_" and "Y" <= "NY_");

    if not is_empty(:var_overlap) then
      signal period_overlap;
    end if;

    :var_overlap.delete();
    CURR_DEL = select 
            "PhoneNumberType",
            "SequenceNumber",
            "ASSOC_OrganizationalUnit.OrganizationalUnitID",
            "ASSOC_OrganizationalUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID",
            "ASSOC_Partner.BusinessPartnerID",
            "BusinessValidFrom",
            "BusinessValidTo"
        from "sap.fsdm::PhoneNumber" WHERE
            (
            "PhoneNumberType" ,
            "SequenceNumber" ,
            "ASSOC_OrganizationalUnit.OrganizationalUnitID" ,
            "ASSOC_OrganizationalUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID" ,
            "ASSOC_Partner.BusinessPartnerID" ,
            "BusinessValidFrom" ,
            "BusinessValidTo" 
            
)
        in ( select
            "OLD"."PhoneNumberType",
            "OLD"."SequenceNumber",
            "OLD"."ASSOC_OrganizationalUnit.OrganizationalUnitID",
            "OLD"."ASSOC_OrganizationalUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID",
            "OLD"."ASSOC_Partner.BusinessPartnerID",
            "OLD"."BusinessValidFrom",
            "OLD"."BusinessValidTo"
        from :row as "IN"
        inner join "sap.fsdm::PhoneNumber" as "OLD"
        on
                              ( "IN"."PhoneNumberType" = "OLD"."PhoneNumberType" or "IN"."PhoneNumberType" is null ) and
                              ( "IN"."SequenceNumber" = "OLD"."SequenceNumber" or "IN"."SequenceNumber" is null ) and
                              ( "IN"."ASSOC_OrganizationalUnit.OrganizationalUnitID" = "OLD"."ASSOC_OrganizationalUnit.OrganizationalUnitID" or "IN"."ASSOC_OrganizationalUnit.OrganizationalUnitID" is null ) and
                              ( "IN"."ASSOC_OrganizationalUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID" = "OLD"."ASSOC_OrganizationalUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID" or "IN"."ASSOC_OrganizationalUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID" is null ) and
                              ( "IN"."ASSOC_Partner.BusinessPartnerID" = "OLD"."ASSOC_Partner.BusinessPartnerID" or "IN"."ASSOC_Partner.BusinessPartnerID" is null ) 
        where
           ( "IN"."BusinessValidFrom" < "OLD"."BusinessValidTo" and "IN"."BusinessValidTo" > "OLD"."BusinessValidFrom" ) or
           ( "IN"."BusinessValidFrom" = "OLD"."BusinessValidFrom" and "IN"."BusinessValidTo" = "OLD"."BusinessValidTo" ));


--Insert ALL the input data 

     CURR_INS = select 
        "PhoneNumberType",
        "SequenceNumber",
        "ASSOC_OrganizationalUnit.OrganizationalUnitID",
        "ASSOC_OrganizationalUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID",
        "ASSOC_Partner.BusinessPartnerID",
        "BusinessValidFrom",
        "BusinessValidTo",
        "AreaCode",
        "ContactPersonName",
        "CountryCallingNumber",
        "ExtensionNumber",
        "IsPreferred",
        "PhoneNumber",
        "SourceSystemID",
        "ChangeTimestampInSourceSystem",
        "ChangingUserInSourceSystem",
        "ChangingProcessType",
        "ChangingProcessID"
          from (
          (
          select
            "OLD_PhoneNumberType" as "PhoneNumberType" ,
            "OLD_SequenceNumber" as "SequenceNumber" ,
            "OLD_ASSOC_OrganizationalUnit.OrganizationalUnitID" as "ASSOC_OrganizationalUnit.OrganizationalUnitID" ,
            "OLD_ASSOC_OrganizationalUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID" as "ASSOC_OrganizationalUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID" ,
            "OLD_ASSOC_Partner.BusinessPartnerID" as "ASSOC_Partner.BusinessPartnerID" ,
            "NX_" as "BusinessValidFrom" ,
            "BusinessValidFrom" as "BusinessValidTo" ,
            "OLD_AreaCode" as "AreaCode" ,
            "OLD_ContactPersonName" as "ContactPersonName" ,
            "OLD_CountryCallingNumber" as "CountryCallingNumber" ,
            "OLD_ExtensionNumber" as "ExtensionNumber" ,
            "OLD_IsPreferred" as "IsPreferred" ,
            "OLD_PhoneNumber" as "PhoneNumber" ,
            "OLD_SourceSystemID" as "SourceSystemID" ,
            "OLD_ChangeTimestampInSourceSystem" as "ChangeTimestampInSourceSystem" ,
            "OLD_ChangingUserInSourceSystem" as "ChangingUserInSourceSystem" ,
            "OLD_ChangingProcessType" as "ChangingProcessType" ,
            "OLD_ChangingProcessID" as "ChangingProcessID" 
        from
        (
            select
                lag("IN"."BusinessValidTo", 1, "OLD"."BusinessValidFrom")
                over ( partition by
                        "OLD"."PhoneNumberType",
                        "OLD"."SequenceNumber",
                        "OLD"."ASSOC_OrganizationalUnit.OrganizationalUnitID",
                        "OLD"."ASSOC_OrganizationalUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID",
                        "OLD"."ASSOC_Partner.BusinessPartnerID",
                        "OLD"."BusinessValidFrom"
                       order by "OLD"."BusinessValidFrom") as "NX_",
                "IN"."BusinessValidFrom",
                                "OLD"."PhoneNumberType" as "OLD_PhoneNumberType",
                                "OLD"."SequenceNumber" as "OLD_SequenceNumber",
                                "OLD"."ASSOC_OrganizationalUnit.OrganizationalUnitID" as "OLD_ASSOC_OrganizationalUnit.OrganizationalUnitID",
                                "OLD"."ASSOC_OrganizationalUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID" as "OLD_ASSOC_OrganizationalUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID",
                                "OLD"."ASSOC_Partner.BusinessPartnerID" as "OLD_ASSOC_Partner.BusinessPartnerID",
                                "OLD"."BusinessValidFrom" as "OLD_BusinessValidFrom",
                                "OLD"."BusinessValidTo" as "OLD_BusinessValidTo",
                "OLD"."SystemValidFrom" as "OLD_SystemValidFrom",
                "OLD"."SystemValidTo" as "OLD_SystemValidTo",
                                "OLD"."AreaCode" as "OLD_AreaCode",
                                "OLD"."ContactPersonName" as "OLD_ContactPersonName",
                                "OLD"."CountryCallingNumber" as "OLD_CountryCallingNumber",
                                "OLD"."ExtensionNumber" as "OLD_ExtensionNumber",
                                "OLD"."IsPreferred" as "OLD_IsPreferred",
                                "OLD"."PhoneNumber" as "OLD_PhoneNumber",
                                "OLD"."SourceSystemID" as "OLD_SourceSystemID",
                                "OLD"."ChangeTimestampInSourceSystem" as "OLD_ChangeTimestampInSourceSystem",
                                "OLD"."ChangingUserInSourceSystem" as "OLD_ChangingUserInSourceSystem",
                                "OLD"."ChangingProcessType" as "OLD_ChangingProcessType",
                                "OLD"."ChangingProcessID" as "OLD_ChangingProcessID"
            from :row as "IN"
            inner join "sap.fsdm::PhoneNumber" as "OLD"
            on
                                      ( "IN"."PhoneNumberType" = "OLD"."PhoneNumberType" or "IN"."PhoneNumberType" is null ) and
                                      ( "IN"."SequenceNumber" = "OLD"."SequenceNumber" or "IN"."SequenceNumber" is null ) and
                                      ( "IN"."ASSOC_OrganizationalUnit.OrganizationalUnitID" = "OLD"."ASSOC_OrganizationalUnit.OrganizationalUnitID" or "IN"."ASSOC_OrganizationalUnit.OrganizationalUnitID" is null ) and
                                      ( "IN"."ASSOC_OrganizationalUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID" = "OLD"."ASSOC_OrganizationalUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID" or "IN"."ASSOC_OrganizationalUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID" is null ) and
                                      ( "IN"."ASSOC_Partner.BusinessPartnerID" = "OLD"."ASSOC_Partner.BusinessPartnerID" or "IN"."ASSOC_Partner.BusinessPartnerID" is null ) 
            where
                         ( "IN"."BusinessValidFrom" < "OLD"."BusinessValidTo" and "IN"."BusinessValidTo" > "OLD"."BusinessValidFrom" ) or
                         ( "IN"."BusinessValidFrom" = "OLD"."BusinessValidFrom" and "IN"."BusinessValidTo" = "OLD"."BusinessValidTo" ))
        where "BusinessValidFrom" > "NX_"         )
        UNION ALL
        (
        select
            "OLD_PhoneNumberType" as "PhoneNumberType",
            "OLD_SequenceNumber" as "SequenceNumber",
            "OLD_ASSOC_OrganizationalUnit.OrganizationalUnitID" as "ASSOC_OrganizationalUnit.OrganizationalUnitID",
            "OLD_ASSOC_OrganizationalUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID" as "ASSOC_OrganizationalUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID",
            "OLD_ASSOC_Partner.BusinessPartnerID" as "ASSOC_Partner.BusinessPartnerID",
            "BusinessValidTo" as "BusinessValidFrom",
            "OLD_BusinessValidTo" as "BusinessValidTo",
            "OLD_AreaCode" as "AreaCode",
            "OLD_ContactPersonName" as "ContactPersonName",
            "OLD_CountryCallingNumber" as "CountryCallingNumber",
            "OLD_ExtensionNumber" as "ExtensionNumber",
            "OLD_IsPreferred" as "IsPreferred",
            "OLD_PhoneNumber" as "PhoneNumber",
            "OLD_SourceSystemID" as "SourceSystemID",
            "OLD_ChangeTimestampInSourceSystem" as "ChangeTimestampInSourceSystem",
            "OLD_ChangingUserInSourceSystem" as "ChangingUserInSourceSystem",
            "OLD_ChangingProcessType" as "ChangingProcessType",
            "OLD_ChangingProcessID" as "ChangingProcessID"
        from
        (
            select
                lead("IN"."BusinessValidFrom", 1, "OLD"."BusinessValidTo")
                over ( partition by
                        "OLD"."PhoneNumberType",
                        "OLD"."SequenceNumber",
                        "OLD"."ASSOC_OrganizationalUnit.OrganizationalUnitID",
                        "OLD"."ASSOC_OrganizationalUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID",
                        "OLD"."ASSOC_Partner.BusinessPartnerID",
                        "OLD"."BusinessValidFrom"
                order by "OLD"."BusinessValidFrom") AS "NY_",
                "IN"."BusinessValidTo",
                                "OLD"."PhoneNumberType" as "OLD_PhoneNumberType",
                                "OLD"."SequenceNumber" as "OLD_SequenceNumber",
                                "OLD"."ASSOC_OrganizationalUnit.OrganizationalUnitID" as "OLD_ASSOC_OrganizationalUnit.OrganizationalUnitID",
                                "OLD"."ASSOC_OrganizationalUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID" as "OLD_ASSOC_OrganizationalUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID",
                                "OLD"."ASSOC_Partner.BusinessPartnerID" as "OLD_ASSOC_Partner.BusinessPartnerID",
                                "OLD"."BusinessValidFrom" as "OLD_BusinessValidFrom",
                                "OLD"."BusinessValidTo" as "OLD_BusinessValidTo",
                "OLD"."SystemValidFrom" as "OLD_SystemValidFrom",
                "OLD"."SystemValidTo" as "OLD_SystemValidTo",
                                "OLD"."AreaCode" as "OLD_AreaCode",
                                "OLD"."ContactPersonName" as "OLD_ContactPersonName",
                                "OLD"."CountryCallingNumber" as "OLD_CountryCallingNumber",
                                "OLD"."ExtensionNumber" as "OLD_ExtensionNumber",
                                "OLD"."IsPreferred" as "OLD_IsPreferred",
                                "OLD"."PhoneNumber" as "OLD_PhoneNumber",
                                "OLD"."SourceSystemID" as "OLD_SourceSystemID",
                                "OLD"."ChangeTimestampInSourceSystem" as "OLD_ChangeTimestampInSourceSystem",
                                "OLD"."ChangingUserInSourceSystem" as "OLD_ChangingUserInSourceSystem",
                                "OLD"."ChangingProcessType" as "OLD_ChangingProcessType",
                                "OLD"."ChangingProcessID" as "OLD_ChangingProcessID"
            from :row as "IN"
            inner join "sap.fsdm::PhoneNumber" as "OLD"
            on
               ( "IN"."PhoneNumberType" = "OLD"."PhoneNumberType" or "IN"."PhoneNumberType" is null ) and
               ( "IN"."SequenceNumber" = "OLD"."SequenceNumber" or "IN"."SequenceNumber" is null ) and
               ( "IN"."ASSOC_OrganizationalUnit.OrganizationalUnitID" = "OLD"."ASSOC_OrganizationalUnit.OrganizationalUnitID" or "IN"."ASSOC_OrganizationalUnit.OrganizationalUnitID" is null ) and
               ( "IN"."ASSOC_OrganizationalUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID" = "OLD"."ASSOC_OrganizationalUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID" or "IN"."ASSOC_OrganizationalUnit.ASSOC_OrganizationHostingOrganizationalUnit.BusinessPartnerID" is null ) and
               ( "IN"."ASSOC_Partner.BusinessPartnerID" = "OLD"."ASSOC_Partner.BusinessPartnerID" or "IN"."ASSOC_Partner.BusinessPartnerID" is null ) 
            where
                         ( "IN"."BusinessValidFrom" < "OLD"."BusinessValidTo" and "IN"."BusinessValidTo" > "OLD"."BusinessValidFrom" ) or
                         ( "IN"."BusinessValidFrom" = "OLD"."BusinessValidFrom" and "IN"."BusinessValidTo" = "OLD"."BusinessValidTo" ))
        where "NY_" = "OLD_BusinessValidTo" and "OLD_BusinessValidTo" > "BusinessValidTo"));



END
